/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FORMULARIOS;


import conexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danie
 */
public class registroinicial extends javax.swing.JFrame {

        conexionSQL cc=new conexionSQL();
        Connection con=cc.conexion();
        
    /**
     * Creates new form sistema
     */
    public registroinicial() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(getBackground());
        
        
        this.setTitle("Control Inicial");
        
        mostrardatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel6 = new javax.swing.JLabel();
        txtbuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablalumnos = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuinicio = new javax.swing.JMenu();
        menusuarios = new javax.swing.JMenuItem();
        menuinventario = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 0));

        jLabel6.setText("BUSQUEDA");

        txtbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbuscarActionPerformed(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("CONTROL INICIAL");

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablalumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Matricula", "Nombre", "Paterno", "Materno", "Carrera", "Title 6"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablalumnos);

        menuinicio.setText("Inicio");
        menuinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuinicioActionPerformed(evt);
            }
        });

        menusuarios.setText("Control Usuarios");
        menusuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menusuariosActionPerformed(evt);
            }
        });
        menuinicio.add(menusuarios);

        menuinventario.setText("Control Inventario");
        menuinventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuinventarioActionPerformed(evt);
            }
        });
        menuinicio.add(menuinventario);

        jMenuBar1.add(menuinicio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbuscarActionPerformed
        // TODO add your handling code here:
        
      
    }//GEN-LAST:event_txtbuscarActionPerformed
    public void filtrardatos(String valor) {
    
        String titulos[]={"Matricula","Nombre","Paterno","Materno","Carrera"};
        String[]registros=new String[5];
        
        DefaultTableModel modelo=new DefaultTableModel(null, titulos);
        
        String SQL="select * from alumnos where matricula like '%"+valor+"%'";
        
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                registros[0]=rs.getString("matricula");
                registros[1]=rs.getString("nombre");
                registros[2]=rs.getString("apellidopa");
                registros[3]=rs.getString("apellidoma");
                registros[4]=rs.getString("carrera");
                
                modelo.addRow(registros);
            }
            
            tablalumnos.setModel(modelo);
               }catch(Exception e){
                   JOptionPane.showMessageDialog(null, "Error al mostrar datos"+ e.getMessage());
        }
        
        
        
        
}
    
    public void mostrardatos() {
    
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            tablalumnos.setModel(modelo);
            
            PreparedStatement ps = null;
            ResultSet rs = null;
             /*conexionSQL cc=new conexionSQL();
            Connection con =cc.conexion();
            */
            String sql = "select matricula, nombre, apellidopa, apellidoma, carrera from alumnos";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd = rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            
            modelo.addColumn("Matricula");
            modelo.addColumn("Nombre");
            modelo.addColumn("Materno");
            modelo.addColumn("Paterno");
            modelo.addColumn("Carrera");
     
            
            while(rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                for(int i = 0; i< cantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1);
                    }
                modelo.addRow(filas);
            }
            
        }catch(SQLException ex){
            System.out.println(ex.toString());
        }
        
        /*String titulos[]={"Matricula","Nombre","Paterno","Materno","Carrera"};
        String[]registros=new String[5];
        
        DefaultTableModel modelo=new DefaultTableModel(null, titulos);
        
        String SQL="select * from alumnos";
        
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                registros[0]=rs.getString("matricula");
                registros[1]=rs.getString("nombre");
                registros[2]=rs.getString("apellidopa");
                registros[3]=rs.getString("apellidoma");
                registros[4]=rs.getString("carrera");
                
                modelo.addRow(registros);
            }
            
            tablalumnos.setModel(modelo);
               }catch(Exception e){
                   JOptionPane.showMessageDialog(null, "Error al mostrar datos"+ e.getMessage());
        }*/
        
        
        
        
}
    private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased
        filtrardatos(txtbuscar.getText());
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_txtbuscarKeyReleased

    private void menuinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuinicioActionPerformed
        
        
// TODO add your handling code here:
    }//GEN-LAST:event_menuinicioActionPerformed

    private void menusuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menusuariosActionPerformed
            registrousuarios form=new registrousuarios();
                    form.setVisible(true);
                    this.dispose();
            

// TODO add your handling code here:
    }//GEN-LAST:event_menusuariosActionPerformed

    private void menuinventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuinventarioActionPerformed
            registroinventario form=new registroinventario();
                    form.setVisible(true);
                    this.dispose();
        
// TODO add your handling code here:
    }//GEN-LAST:event_menuinventarioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mostrardatos();
    }//GEN-LAST:event_jButton1ActionPerformed
   
    public void eliminaregistro(){
        
        int filaseleccionada = tablalumnos.getSelectedRow();
        
        try {
            String SQL = "Delete from alumnos where matricula=" +tablalumnos.getValueAt(filaseleccionada, 0);
            Statement st =con.createStatement();
            int n = st.executeUpdate(SQL);
            if (n>=0) {
                JOptionPane.showMessageDialog(null, "Registro Eliminado");
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error de Registro" + e.getMessage());
        }
    }
    
    public void limpiarcajas(){
       /* txtnombre.setText("");
        txtapellidopa.setText("");
        txtapellidoma.setText("");
        txtmatricula.setText("");
        txtcarrera.setText("");*/
    }
   /* public void insertardatos(){
        try {
            String SQL="insert into alumnos (matricula, nombre, apellidopa, apellidoma, carrera) values (?,?,?,?,?)";
            //String SQL1="insert into materias (carrera) values (?)";
            //PreparedStatement pst1=con.prepareStatement(SQL1);
            PreparedStatement pst=con.prepareStatement(SQL);
            pst.setString(2, txtnombre.getText());
            pst.setString(3, txtapellidopa.getText());
            pst.setString(4, txtapellidoma.getText());
            pst.setDouble(1, Double.parseDouble(txtmatricula.getText()));
            pst.setString(5, txtcarrera.getText());
           // pst1.setString(3, txtcarrera.getText());
            pst.execute();
            //pst1.execute();
            if (pst.execute()) {
                
                String SQL1="insert into materias (carrera) values (?)";
                PreparedStatement pst1=con.prepareStatement(SQL1);
                pst1.setString(3, txtcarrera.getText());
                pst1.execute();
            }
            JOptionPane.showMessageDialog(null, "Registro Exitoso");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error de Registro" + e.getMessage());
        }}*/
        /*public void actualizardatos(){
        try {
            String SQL="update alumnos set matricula=?, nombre=?, apellidopa=?, apellidoma=?, carrera=? where matricula=?";
            int filaseleccionado=tablalumnos.getSelectedRow();
            String dao=(String)tablalumnos.getValueAt(filaseleccionado, 0);
            PreparedStatement pst=con.prepareStatement(SQL);
            pst.setString(2, txtnombre.getText());
            pst.setString(3, txtapellidopa.getText());
            pst.setString(4, txtapellidoma.getText());
            pst.setDouble(1, Double.parseDouble(txtmatricula.getText()));
            pst.setString(5, txtcarrera.getText());
            
            pst.setString(6, dao);
            pst.execute();
            
            
            JOptionPane.showMessageDialog(null, "Registro Editado Exitoso");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error de Edicion" + e.getMessage());
        }
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroinicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroinicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuinicio;
    private javax.swing.JMenuItem menuinventario;
    private javax.swing.JMenuItem menusuarios;
    private javax.swing.JTable tablalumnos;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
}
